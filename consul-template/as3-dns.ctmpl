{
  "class": "ADC",
  "schemaVersion": "3.9.0",
         "Common": {
          "class": "Tenant",
          "Shared": {
            "class": "Application",
            "template": "shared",
	     "myMonitor": {
                "class": "GSLB_Monitor",
                "monitorType": "tcp",
                "send": ""
            },
	     "AS3DataCenter": {
                      "class": "GSLB_Data_Center"
              }
              ,"AS3Server": {
                                "class": "GSLB_Server",
                                "dataCenter": 
                                         {"use":"AS3DataCenter"}
                                ,
                                "devices": [
                                            {
                                                "address": "10.1.10.240",
                                                "addressTranslation": "10.1.10.240"
                                            },
                                            {
                                                "address": "10.1.10.241",
                                                "addressTranslation": "10.1.10.241"
                                            }					    
                                ]
                                ,
                                "virtualServers": [

{{ scratch.Set "cnt" 0 }}
{{ $idx := 0 }}
{{ range $dc := datacenters }}
{{ $tenant :=  printf "%s@%s" "Tenant" $dc }}
{{  range ls $tenant }}
{{ $cnt := scratch.Get "cnt" }}
                                      {{ if  ne $cnt 0 }},{{ end }}
                                      {
                                             "address":"{{ .Value }}",
                                             "addressTranslation":"{{ .Value }}",
                                             "addressTranslationPort":443,
                                             "port":443,
					     "monitors": [ {"use":"myMonitor"}]
				       }
{{ $tenant_key := printf "%s@%s" .Key $dc }}
{{ scratch.Set $tenant_key $cnt }}
{{ scratch.MapSet "Tenants" .Key "1"}}
{{ $cnt := $cnt | add 1 }}
{{ scratch.Set "cnt" $cnt }}
{{ $dc_filter :=  printf "@%s" $dc }}
  {{ range $service := services $dc_filter }}
    {{ if $service.Tags | contains "as3" }}
       {{ $map_key := printf "%s/%s" $service.Name $dc }}
       {{ scratch.MapSet "Services" $service.Name "1" }}

          	{{ $svc_filter :=  printf "as3.%s@%s|any" .Name $dc }}
		{{ range $tag, $services := service $svc_filter | byTag }}
		{{ range $services }}

	        {{ scratch.Set "status" "critical" }}
		{{ scratch.Set "svc" .Name  }}	
		{{ if eq .Status "passing" }}	        {{ scratch.Set "status" "passing" }}{{ end }}
		{{ else }}
	        {{ scratch.Set "status" "none" }}		
        	{{ end }}
		{{ $status := scratch.Get "status" }}
		{{ $svc := scratch.Get "svc" }}
		{{ if ne $tag "as3" }}
       		   {{ $pool_key := printf "/%s/%s/%s" $dc $tag $svc }}
		   {{ scratch.Set $pool_key $status }}
		   {{ end }}
		{{ end }}		   		


    {{ end }}
  {{ end }}
{{ end }}
{{ end }}
				       ]
                        }
          }
       },

{{ $tenants := scratch.Get "Tenants" }}
{{ $services := scratch.Get "Services" }}

{{ range $key, $val := $tenants }}
{{ $z := scratch.Get "z" }}
 {{ if $z }},{{end }}
 {{ scratch.Set "z" 1 }}
    "{{ $key }}Dns": {
        "class": "Tenant",
	    "Pools": {"class":"Application","template":"generic"{{ if $services}},{{ end }}
     {{ scratch.Set "first" true }}	    
     {{ range $service,$junk := $services }}
     	{{ $first := scratch.Get "first" }}{{ if eq $first false }},{{end}}{{ scratch.Set "first" false }}
                        "domain_{{ $service }}": {
                                "class": "GSLB_Domain",
                                "domainName": "{{ $service }}{{ if eq $key "Staging" }}.qa{{ end }}{{ if eq $key "Development" }}.dev{{ end}}.example.com",
                                "resourceRecordType": "A",
                                "pools": [
				{{ scratch.Set "y" true }}
                          	{{ range $idx, $dc := datacenters }}
   					{{ $pool_key := printf "/%s/%s/%s" $dc $key $service }}
		
					{{ $pool_state := scratch.Get $pool_key }}

				{{ $y := scratch.Get "y" }}
				{{ if $pool_state }}
				{{ if eq $y false }},{{end}}
				{{ scratch.Set "y" false }}
				{
                                                "use": "gslb_{{ $dc}}{{ $service }}"
                                        }
					{{ end }}
					{{ end }}
                                ]
                        }
     
	{{ range $dc := datacenters }}
	        {{ scratch.Set "status" "critical" }}
          	{{ $svc_filter :=  printf "%s.%s@%s|any" $key $service $dc }}
	       {{ range service $svc_filter }}
		{{ if eq .Status "passing" }}	        {{ scratch.Set "status" "passing" }}{{ end }}
		{{ else }}
	        {{ scratch.Set "status" "none" }}		
        	{{ end }}
		{{ $status := scratch.Get "status" }}
		{{ if ne $status "none" }}
		{{ $pool_key := printf "/%s/%s/%s" $dc $key $service }}
		
		{{ $pool_state := scratch.Get $pool_key }}

              ,"gslb_{{ $dc}}{{ $service }}": {
                   "class": "GSLB_Pool",			
        	   {{ if  eq $status "critical" }}"enabled": false,{{end}}
                "members": [
                    {
                        "server": {
                            "use": "/Common/Shared/AS3Server"
                        },
                       {{ $tenant_key := printf "%s@%s" $key $dc }}
		       {{ $cnt := scratch.Get $tenant_key }}
                        "virtualServer": "{{ $cnt }}"
                    }
                ],
                "resourceRecordType": "A"
            }		   
		{{ end }} 
	{{ end }} 
     {{ end }}

}}

{{ end }}


}

