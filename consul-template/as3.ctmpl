{
  "class": "ADC",
{{ scratch.Set "first" true }}
{{ range $tag, $services := services  | byTag }}
{{ if ne $tag "as3" }}
{{ $first := scratch.Get "first" }}
{{ if eq $first false }}}},{{end}}
{{ scratch.Set "first" false }}
    "{{ $tag }}": {
        "class": "Tenant",
	    "Pools": {"class":"Application","template":"generic",
{{ $vs_key := printf "Tenant/%s" $tag }}	    
{{ if keyExists $vs_key }}
           "{{ $tag }}_choose_pool": {
            "class": "iRule",
            "iRule": "when CLIENTSSL_CLIENTHELLO {\n    set sni_exists [SSL::extensions exists -type 0]\n    if { $sni_exists }\n    { binary scan [SSL::extensions -type 0] S1S1S1cS1a* ssl_ext_type ssl_ext_len ssl_ext_sn_list_len ssl_ext_sn_type ssl_ext_sn_len ssl_ext_sn }\n    if { [info exists ssl_ext_sn]} {\n      #log local0. \"$ssl_ext_sn\"\n      set pool_name [getfield $ssl_ext_sn \".\" 1]\n      #log local0. \"$pool_name\"\n      if { [catch { pool /{{ $tag }}/Pools/$pool_name } ] } {\n        #log local0. \"no such pool $pool_name\"\n      }\n    }\n}"},
                         "{{ $tag }}snirouter": {
                "class": "Service_TCP",
		{{ $vs_key := printf "Tenant/%s" $tag }}
                "virtualAddresses": ["{{ key $vs_key}}"],
               "remark":"{{ $tag }}snirouter: f5demo.snirouter.tcp.v1",

               "virtualPort": 443,
               "persistenceMethods": ["tls-session-id"],
               "iRules": [
                   "{{ $tag }}_choose_pool"
               ]
                         },
    {{ end }}{{/* end if keyExists */}}
{{ range $idx,$service :=$services}}
{{ if .Tags | contains "as3" }}
{{ if ne $idx 0}},{{end}}
{{ $name := printf "%s.%s|any" $tag .Name }}
"{{.Name}}": {
    "class": "Pool",
      "monitors":[{"bigip":"/Common/inband"}],
      "members":[
          {{range $idx2, $svc := service $name}}
{{ if ne $idx2 0 }},{{end}}
       {
         {{ if ne .Status "passing" }}"adminState":"disable",{{end}}
	 {{ $priority := index .ServiceMeta "priority" }}
	 {{ if  $priority }}"priorityGroup":{{ $priority }},{{end}}
         "servicePort": {{.Port}},
          "serverAddresses": [
          "{{.Address}}"
	  ]}{{end}}
	  ]}
  {{end}}{{end}}
{{end}}{{end}}
{{ $first := scratch.Get "first" }}
{{ if eq $first  true }}
{{ range ls "Tenant" }}
{{ $first := scratch.Get "first" }}
{{ if eq $first false }},{{end}}
{{ scratch.Set "first" false }}
"{{.Key }}" : {
    "class": "Tenant"
     }
{{ end }}
{{ $first := scratch.Get "first" }}
{{ if eq $first false }},{{end}}
  "schemaVersion": "3.9.0" }
{{ else }}
}},  "schemaVersion": "3.9.0"}
{{ end }}
